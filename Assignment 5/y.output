Nonterminals useless in grammar

   enumeration_constant


Terminals unused in grammar

   STRUCT
   TYPEDEF
   UNION
   SCOMMENT
   MCOMMENT


Rules useless in grammar

  207 enumeration_constant: ID


State 38 conflicts: 21 shift/reduce
State 61 conflicts: 1 shift/reduce
State 97 conflicts: 3 shift/reduce
State 101 conflicts: 1 shift/reduce
State 102 conflicts: 2 shift/reduce
State 106 conflicts: 1 shift/reduce
State 252 conflicts: 1 shift/reduce
State 253 conflicts: 1 shift/reduce
State 254 conflicts: 2 shift/reduce
State 255 conflicts: 2 shift/reduce
State 263 conflicts: 1 shift/reduce
State 292 conflicts: 1 shift/reduce
State 348 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 M: %empty

    2 N: %empty

    3 primary_expression: ID
    4                   | CONST_INT
    5                   | CONST_FLT
    6                   | CONST_CHAR
    7                   | STRING
    8                   | '(' expression ')'

    9 postfix_expression: primary_expression
   10                   | postfix_expression '[' expression ']'
   11                   | postfix_expression '(' ')'
   12                   | postfix_expression '(' argument_expression_list ')'
   13                   | postfix_expression '.' ID
   14                   | postfix_expression POINTER ID
   15                   | postfix_expression INCREMENT
   16                   | postfix_expression DECREMENT
   17                   | '(' type_name ')' '{' initializer_list '}'
   18                   | '(' type_name ')' '{' initializer_list ',' '}'

   19 argument_expression_list: assignment_expression
   20                         | argument_expression_list ',' assignment_expression

   21 unary_expression: postfix_expression
   22                 | INCREMENT unary_expression
   23                 | DECREMENT unary_expression
   24                 | unary_operator cast_expression
   25                 | SIZEOF unary_expression
   26                 | SIZEOF '(' type_name ')'

   27 unary_operator: '&'
   28               | '*'
   29               | '+'
   30               | '-'
   31               | '~'
   32               | '!'

   33 cast_expression: unary_expression
   34                | '(' type_name ')' cast_expression

   35 multiplicative_expression: cast_expression
   36                          | multiplicative_expression '*' cast_expression
   37                          | multiplicative_expression '/' cast_expression
   38                          | multiplicative_expression '%' cast_expression

   39 additive_expression: multiplicative_expression
   40                    | additive_expression '+' multiplicative_expression
   41                    | additive_expression '-' multiplicative_expression

   42 shift_expression: additive_expression
   43                 | shift_expression LEFT_SHIFT additive_expression
   44                 | shift_expression RIGHT_SHIFT additive_expression

   45 relational_expression: shift_expression
   46                      | relational_expression '<' shift_expression
   47                      | relational_expression '>' shift_expression
   48                      | relational_expression LESS_EQUALS shift_expression
   49                      | relational_expression GREATER_EQUALS shift_expression

   50 equality_expression: relational_expression
   51                    | equality_expression EQUALS relational_expression
   52                    | equality_expression NOT_EQUALS relational_expression

   53 AND_expression: equality_expression
   54               | AND_expression '&' equality_expression

   55 exclusive_OR_expression: AND_expression
   56                        | exclusive_OR_expression '^' AND_expression

   57 inclusive_OR_expression: exclusive_OR_expression
   58                        | inclusive_OR_expression '|' exclusive_OR_expression

   59 logical_AND_expression: inclusive_OR_expression
   60                       | logical_AND_expression N AND_OP M inclusive_OR_expression N

   61 logical_OR_expression: logical_AND_expression
   62                      | logical_OR_expression N OR_OP M logical_AND_expression N

   63 conditional_expression: logical_OR_expression
   64                       | logical_OR_expression N '?' M expression N ':' M conditional_expression

   65 assignment_operator: '='
   66                    | MULTIPLY_ASSIGN
   67                    | DIVIDE_ASSIGN
   68                    | MODULO_ASSIGN
   69                    | ADD_ASSIGN
   70                    | SUBTRACT_ASSIGN
   71                    | LEFT_SHIFT_ASSIGN
   72                    | RIGHT_SHIFT_ASSIGN
   73                    | AND_ASSIGN
   74                    | XOR_ASSIGN
   75                    | OR_ASSIGN

   76 assignment_expression: conditional_expression
   77                      | unary_expression assignment_operator assignment_expression

   78 constant_expression: conditional_expression

   79 expression: assignment_expression
   80           | expression ',' assignment_expression

   81 declaration: declaration_specifiers ';'
   82            | declaration_specifiers init_declarator_list

   83 declaration_specifiers: storage_class_specifier declaration_specifiers_opt
   84                       | type_specifier declaration_specifiers_opt
   85                       | type_qualifier declaration_specifiers_opt
   86                       | function_specifier declaration_specifiers_opt

   87 declaration_specifiers_opt: declaration_specifiers
   88                           | %empty

   89 init_declarator_list: init_declarator
   90                     | init_declarator_list ',' init_declarator

   91 init_declarator: declarator
   92                | declarator '=' initializer

   93 storage_class_specifier: EXTERN
   94                        | STATIC
   95                        | AUTO
   96                        | REGISTER

   97 type_specifier: VOID
   98               | CHAR
   99               | SHORT
  100               | INT
  101               | LONG
  102               | FLOAT
  103               | DOUBLE
  104               | SIGNED
  105               | UNSIGNED
  106               | BOOL
  107               | COMPLEX
  108               | IMAGINARY
  109               | enum_specifier

  110 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
  111                         | type_qualifier specifier_qualifier_list_opt

  112 specifier_qualifier_list_opt: specifier_qualifier_list
  113                             | %empty

  114 enum_specifier: ENUM ID_opt '{' enumerator_list '}'
  115               | ENUM ID_opt '{' enumerator_list ',' '}'
  116               | ENUM ID

  117 ID_opt: ID
  118       | %empty

  119 enumerator_list: enumerator
  120                | enumerator_list ',' enumerator

  121 enumerator: CONST_ENUM
  122           | CONST_ENUM '=' constant_expression

  123 type_qualifier: CONST
  124               | RESTRICT
  125               | VOLATILE

  126 function_specifier: INLINE

  127 declarator: pointer_opt direct_declarator

  128 pointer_opt: pointer
  129            | %empty

  130 direct_declarator: ID
  131                  | '(' declarator ')'
  132                  | direct_declarator '[' type_qualifier_list_opt assignment_expression_opt ']'
  133                  | direct_declarator '[' STATIC type_qualifier_list_opt assignment_expression ']'
  134                  | direct_declarator '[' type_qualifier_list STATIC assignment_expression ']'
  135                  | direct_declarator '[' type_qualifier_list_opt '*' ']'
  136                  | direct_declarator '(' parameter_type_list ')'
  137                  | direct_declarator '(' ID_list_opt ')'

  138 type_qualifier_list_opt: type_qualifier_list
  139                        | %empty

  140 assignment_expression_opt: assignment_expression
  141                          | %empty

  142 ID_list_opt: ID_list
  143            | %empty

  144 pointer: '*' type_qualifier_list_opt
  145        | '*' type_qualifier_list_opt pointer

  146 type_qualifier_list: type_qualifier
  147                    | type_qualifier_list type_qualifier

  148 parameter_type_list: parameter_list
  149                    | parameter_list ',' ELLIPSIS

  150 parameter_list: parameter_declaration
  151               | parameter_list ',' parameter_declaration

  152 parameter_declaration: declaration_specifiers declarator
  153                      | declaration_specifiers

  154 ID_list: ID
  155        | ID_list ',' ID

  156 type_name: specifier_qualifier_list

  157 initializer: assignment_expression
  158            | '{' initializer_list '}'
  159            | '{' initializer_list ',' '}'

  160 initializer_list: designation_opt initializer
  161                 | initializer_list ',' designation_opt initializer

  162 designation_opt: designation
  163                | %empty

  164 designation: designator_list '='

  165 designator_list: designator
  166                | designator_list designator

  167 designator: '[' constant_expression ']'
  168           | '.' ID

  169 statement: labeled_statement
  170          | compound_statement
  171          | expression_statement
  172          | selection_statement
  173          | iteration_statement
  174          | jump_statement

  175 labeled_statement: ID ':' statement
  176                  | CASE constant_expression ':' statement
  177                  | DEFAULT ':' statement

  178 compound_statement: '{' '}'
  179                   | '{' block_item_list '}'

  180 block_item_list: block_item
  181                | block_item_list M block_item

  182 block_item: declaration
  183           | statement

  184 expression_statement: expression_opt ';'

  185 expression_opt: expression
  186               | %empty

  187 selection_statement: IF '(' expression N ')' M statement N ELSE M statement N
  188                    | IF '(' expression N ')' M statement N
  189                    | SWITCH '(' expression ')' statement

  190 iteration_statement: WHILE M '(' expression N ')' M statement
  191                    | DO M statement M WHILE '(' expression ')' ';'
  192                    | FOR '(' expression_opt ';' M expression_opt N ';' M expression_opt N ')' M statement
  193                    | FOR '(' declaration expression_opt ';' expression_opt ')' statement

  194 jump_statement: GOTO_KEYWORD ID ';'
  195               | CONTINUE ';'
  196               | BREAK ';'
  197               | RETURN_KEYWORD ';'
  198               | RETURN_KEYWORD expression ';'

  199 translation_unit: external_declaration
  200                 | translation_unit external_declaration

  201 external_declaration: function_definition
  202                     | declaration

  203 function_definition: declaration_specifiers declarator compound_statement
  204                    | declaration_specifiers declarator declaration_list compound_statement

  205 declaration_list: declaration
  206                 | declaration_list declaration


Terminals, with rules where they appear

$end (0) 0
'!' (33) 32
'%' (37) 38
'&' (38) 27 54
'(' (40) 8 11 12 17 18 26 34 131 136 137 187 188 189 190 191 192 193
')' (41) 8 11 12 17 18 26 34 131 136 137 187 188 189 190 191 192 193
'*' (42) 28 36 135 144 145
'+' (43) 29 40
',' (44) 18 20 80 90 115 120 149 151 155 159 161
'-' (45) 30 41
'.' (46) 13 168
'/' (47) 37
':' (58) 64 175 176 177
';' (59) 81 184 191 192 193 194 195 196 197 198
'<' (60) 46
'=' (61) 65 92 122 164
'>' (62) 47
'?' (63) 64
'[' (91) 10 132 133 134 135 167
']' (93) 10 132 133 134 135 167
'^' (94) 56
'{' (123) 17 18 114 115 158 159 178 179
'|' (124) 58
'}' (125) 17 18 114 115 158 159 178 179
'~' (126) 31
error (256)
AUTO (258) 95
BREAK (259) 196
CASE (260) 176
CHAR (261) 98
CONST (262) 123
CONTINUE (263) 195
DEFAULT (264) 177
DO (265) 191
DOUBLE (266) 103
ELSE (267) 187
ENUM (268) 114 115 116
EXTERN (269) 93
FLOAT (270) 102
FOR (271) 192 193
GOTO_KEYWORD (272) 194
IF (273) 187 188
INLINE (274) 126
INT (275) 100
LONG (276) 101
REGISTER (277) 96
RESTRICT (278) 124
RETURN_KEYWORD (279) 197 198
SHORT (280) 99
SIGNED (281) 104
SIZEOF (282) 25 26
STATIC (283) 94 133 134
STRUCT (284)
SWITCH (285) 189
TYPEDEF (286)
UNION (287)
UNSIGNED (288) 105
VOID (289) 97
VOLATILE (290) 125
WHILE (291) 190 191
BOOL (292) 106
COMPLEX (293) 107
IMAGINARY (294) 108
POINTER (295) 14
INCREMENT (296) 15 22
DECREMENT (297) 16 23
LEFT_SHIFT (298) 43
RIGHT_SHIFT (299) 44
LESS_EQUALS (300) 48
GREATER_EQUALS (301) 49
EQUALS (302) 51
NOT_EQUALS (303) 52
AND_OP (304) 60
OR_OP (305) 62
ELLIPSIS (306) 149
MULTIPLY_ASSIGN (307) 66
DIVIDE_ASSIGN (308) 67
MODULO_ASSIGN (309) 68
ADD_ASSIGN (310) 69
SUBTRACT_ASSIGN (311) 70
LEFT_SHIFT_ASSIGN (312) 71
RIGHT_SHIFT_ASSIGN (313) 72
AND_ASSIGN (314) 73
XOR_ASSIGN (315) 74
OR_ASSIGN (316) 75
SCOMMENT (317)
MCOMMENT (318)
ID (319) 3 13 14 116 117 130 154 155 168 175 194
CONST_INT (320) 4
CONST_ENUM (321) 121 122
CONST_FLT (322) 5
STRING (323) 7
CONST_CHAR (324) 6


Nonterminals, with rules where they appear

$accept (94)
    on left: 0
M (95)
    on left: 1, on right: 60 62 64 181 187 188 190 191 192
N (96)
    on left: 2, on right: 60 62 64 187 188 190 192
primary_expression (97)
    on left: 3 4 5 6 7 8, on right: 9
postfix_expression (98)
    on left: 9 10 11 12 13 14 15 16 17 18, on right: 10 11 12 13 14
    15 16 21
argument_expression_list (99)
    on left: 19 20, on right: 12 20
unary_expression (100)
    on left: 21 22 23 24 25 26, on right: 22 23 25 33 77
unary_operator (101)
    on left: 27 28 29 30 31 32, on right: 24
cast_expression (102)
    on left: 33 34, on right: 24 34 35 36 37 38
multiplicative_expression (103)
    on left: 35 36 37 38, on right: 36 37 38 39 40 41
additive_expression (104)
    on left: 39 40 41, on right: 40 41 42 43 44
shift_expression (105)
    on left: 42 43 44, on right: 43 44 45 46 47 48 49
relational_expression (106)
    on left: 45 46 47 48 49, on right: 46 47 48 49 50 51 52
equality_expression (107)
    on left: 50 51 52, on right: 51 52 53 54
AND_expression (108)
    on left: 53 54, on right: 54 55 56
exclusive_OR_expression (109)
    on left: 55 56, on right: 56 57 58
inclusive_OR_expression (110)
    on left: 57 58, on right: 58 59 60
logical_AND_expression (111)
    on left: 59 60, on right: 60 61 62
logical_OR_expression (112)
    on left: 61 62, on right: 62 63 64
conditional_expression (113)
    on left: 63 64, on right: 64 76 78
assignment_operator (114)
    on left: 65 66 67 68 69 70 71 72 73 74 75, on right: 77
assignment_expression (115)
    on left: 76 77, on right: 19 20 77 79 80 133 134 140 157
constant_expression (116)
    on left: 78, on right: 122 167 176
expression (117)
    on left: 79 80, on right: 8 10 64 80 185 187 188 189 190 191 198
declaration (118)
    on left: 81 82, on right: 182 193 202 205 206
declaration_specifiers (119)
    on left: 83 84 85 86, on right: 81 82 87 152 153 203 204
declaration_specifiers_opt (120)
    on left: 87 88, on right: 83 84 85 86
init_declarator_list (121)
    on left: 89 90, on right: 82 90
init_declarator (122)
    on left: 91 92, on right: 89 90
storage_class_specifier (123)
    on left: 93 94 95 96, on right: 83
type_specifier (124)
    on left: 97 98 99 100 101 102 103 104 105 106 107 108 109, on right:
    84 110
specifier_qualifier_list (125)
    on left: 110 111, on right: 112 156
specifier_qualifier_list_opt (126)
    on left: 112 113, on right: 110 111
enum_specifier (127)
    on left: 114 115 116, on right: 109
ID_opt (128)
    on left: 117 118, on right: 114 115
enumerator_list (129)
    on left: 119 120, on right: 114 115 120
enumerator (130)
    on left: 121 122, on right: 119 120
type_qualifier (131)
    on left: 123 124 125, on right: 85 111 146 147
function_specifier (132)
    on left: 126, on right: 86
declarator (133)
    on left: 127, on right: 91 92 131 152 203 204
pointer_opt (134)
    on left: 128 129, on right: 127
direct_declarator (135)
    on left: 130 131 132 133 134 135 136 137, on right: 127 132 133
    134 135 136 137
type_qualifier_list_opt (136)
    on left: 138 139, on right: 132 133 135 144 145
assignment_expression_opt (137)
    on left: 140 141, on right: 132
ID_list_opt (138)
    on left: 142 143, on right: 137
pointer (139)
    on left: 144 145, on right: 128 145
type_qualifier_list (140)
    on left: 146 147, on right: 134 138 147
parameter_type_list (141)
    on left: 148 149, on right: 136
parameter_list (142)
    on left: 150 151, on right: 148 149 151
parameter_declaration (143)
    on left: 152 153, on right: 150 151
ID_list (144)
    on left: 154 155, on right: 142 155
type_name (145)
    on left: 156, on right: 17 18 26 34
initializer (146)
    on left: 157 158 159, on right: 92 160 161
initializer_list (147)
    on left: 160 161, on right: 17 18 158 159 161
designation_opt (148)
    on left: 162 163, on right: 160 161
designation (149)
    on left: 164, on right: 162
designator_list (150)
    on left: 165 166, on right: 164 166
designator (151)
    on left: 167 168, on right: 165 166
statement (152)
    on left: 169 170 171 172 173 174, on right: 175 176 177 183 187
    188 189 190 191 192 193
labeled_statement (153)
    on left: 175 176 177, on right: 169
compound_statement (154)
    on left: 178 179, on right: 170 203 204
block_item_list (155)
    on left: 180 181, on right: 179 181
block_item (156)
    on left: 182 183, on right: 180 181
expression_statement (157)
    on left: 184, on right: 171
expression_opt (158)
    on left: 185 186, on right: 184 192 193
selection_statement (159)
    on left: 187 188 189, on right: 172
iteration_statement (160)
    on left: 190 191 192 193, on right: 173
jump_statement (161)
    on left: 194 195 196 197 198, on right: 174
translation_unit (162)
    on left: 199 200, on right: 0 200
external_declaration (163)
    on left: 201 202, on right: 199 200
function_definition (164)
    on left: 203 204, on right: 201
declaration_list (165)
    on left: 205 206, on right: 204 206


State 0

    0 $accept: . translation_unit $end

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    translation_unit         go to state 29
    external_declaration     go to state 30
    function_definition      go to state 31


State 1

   95 storage_class_specifier: AUTO .

    $default  reduce using rule 95 (storage_class_specifier)


State 2

   98 type_specifier: CHAR .

    $default  reduce using rule 98 (type_specifier)


State 3

  123 type_qualifier: CONST .

    $default  reduce using rule 123 (type_qualifier)


State 4

  103 type_specifier: DOUBLE .

    $default  reduce using rule 103 (type_specifier)


State 5

  114 enum_specifier: ENUM . ID_opt '{' enumerator_list '}'
  115               | ENUM . ID_opt '{' enumerator_list ',' '}'
  116               | ENUM . ID

    ID  shift, and go to state 32

    $default  reduce using rule 118 (ID_opt)

    ID_opt  go to state 33


State 6

   93 storage_class_specifier: EXTERN .

    $default  reduce using rule 93 (storage_class_specifier)


State 7

  102 type_specifier: FLOAT .

    $default  reduce using rule 102 (type_specifier)


State 8

  126 function_specifier: INLINE .

    $default  reduce using rule 126 (function_specifier)


State 9

  100 type_specifier: INT .

    $default  reduce using rule 100 (type_specifier)


State 10

  101 type_specifier: LONG .

    $default  reduce using rule 101 (type_specifier)


State 11

   96 storage_class_specifier: REGISTER .

    $default  reduce using rule 96 (storage_class_specifier)


State 12

  124 type_qualifier: RESTRICT .

    $default  reduce using rule 124 (type_qualifier)


State 13

   99 type_specifier: SHORT .

    $default  reduce using rule 99 (type_specifier)


State 14

  104 type_specifier: SIGNED .

    $default  reduce using rule 104 (type_specifier)


State 15

   94 storage_class_specifier: STATIC .

    $default  reduce using rule 94 (storage_class_specifier)


State 16

  105 type_specifier: UNSIGNED .

    $default  reduce using rule 105 (type_specifier)


State 17

   97 type_specifier: VOID .

    $default  reduce using rule 97 (type_specifier)


State 18

  125 type_qualifier: VOLATILE .

    $default  reduce using rule 125 (type_qualifier)


State 19

  106 type_specifier: BOOL .

    $default  reduce using rule 106 (type_specifier)


State 20

  107 type_specifier: COMPLEX .

    $default  reduce using rule 107 (type_specifier)


State 21

  108 type_specifier: IMAGINARY .

    $default  reduce using rule 108 (type_specifier)


State 22

  202 external_declaration: declaration .

    $default  reduce using rule 202 (external_declaration)


State 23

   81 declaration: declaration_specifiers . ';'
   82            | declaration_specifiers . init_declarator_list
  203 function_definition: declaration_specifiers . declarator compound_statement
  204                    | declaration_specifiers . declarator declaration_list compound_statement

    '*'  shift, and go to state 34
    ';'  shift, and go to state 35

    $default  reduce using rule 129 (pointer_opt)

    init_declarator_list  go to state 36
    init_declarator       go to state 37
    declarator            go to state 38
    pointer_opt           go to state 39
    pointer               go to state 40


State 24

   83 declaration_specifiers: storage_class_specifier . declaration_specifiers_opt

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 88 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 42
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 25

   84 declaration_specifiers: type_specifier . declaration_specifiers_opt

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 88 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 43
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 26

  109 type_specifier: enum_specifier .

    $default  reduce using rule 109 (type_specifier)


State 27

   85 declaration_specifiers: type_qualifier . declaration_specifiers_opt

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 88 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 44
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 28

   86 declaration_specifiers: function_specifier . declaration_specifiers_opt

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 88 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 45
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 29

    0 $accept: translation_unit . $end
  200 translation_unit: translation_unit . external_declaration

    $end       shift, and go to state 46
    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    external_declaration     go to state 47
    function_definition      go to state 31


State 30

  199 translation_unit: external_declaration .

    $default  reduce using rule 199 (translation_unit)


State 31

  201 external_declaration: function_definition .

    $default  reduce using rule 201 (external_declaration)


State 32

  116 enum_specifier: ENUM ID .
  117 ID_opt: ID .

    '{'       reduce using rule 117 (ID_opt)
    $default  reduce using rule 116 (enum_specifier)


State 33

  114 enum_specifier: ENUM ID_opt . '{' enumerator_list '}'
  115               | ENUM ID_opt . '{' enumerator_list ',' '}'

    '{'  shift, and go to state 48


State 34

  144 pointer: '*' . type_qualifier_list_opt
  145        | '*' . type_qualifier_list_opt pointer

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 139 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list_opt  go to state 50
    type_qualifier_list      go to state 51


State 35

   81 declaration: declaration_specifiers ';' .

    $default  reduce using rule 81 (declaration)


State 36

   82 declaration: declaration_specifiers init_declarator_list .
   90 init_declarator_list: init_declarator_list . ',' init_declarator

    ','  shift, and go to state 52

    $default  reduce using rule 82 (declaration)


State 37

   89 init_declarator_list: init_declarator .

    $default  reduce using rule 89 (init_declarator_list)


State 38

   91 init_declarator: declarator .
   92                | declarator . '=' initializer
  203 function_definition: declaration_specifiers declarator . compound_statement
  204                    | declaration_specifiers declarator . declaration_list compound_statement

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21
    '{'        shift, and go to state 53
    '='        shift, and go to state 54

    AUTO       [reduce using rule 91 (init_declarator)]
    CHAR       [reduce using rule 91 (init_declarator)]
    CONST      [reduce using rule 91 (init_declarator)]
    DOUBLE     [reduce using rule 91 (init_declarator)]
    ENUM       [reduce using rule 91 (init_declarator)]
    EXTERN     [reduce using rule 91 (init_declarator)]
    FLOAT      [reduce using rule 91 (init_declarator)]
    INLINE     [reduce using rule 91 (init_declarator)]
    INT        [reduce using rule 91 (init_declarator)]
    LONG       [reduce using rule 91 (init_declarator)]
    REGISTER   [reduce using rule 91 (init_declarator)]
    RESTRICT   [reduce using rule 91 (init_declarator)]
    SHORT      [reduce using rule 91 (init_declarator)]
    SIGNED     [reduce using rule 91 (init_declarator)]
    STATIC     [reduce using rule 91 (init_declarator)]
    UNSIGNED   [reduce using rule 91 (init_declarator)]
    VOID       [reduce using rule 91 (init_declarator)]
    VOLATILE   [reduce using rule 91 (init_declarator)]
    BOOL       [reduce using rule 91 (init_declarator)]
    COMPLEX    [reduce using rule 91 (init_declarator)]
    IMAGINARY  [reduce using rule 91 (init_declarator)]
    $default   reduce using rule 91 (init_declarator)

    declaration              go to state 55
    declaration_specifiers   go to state 56
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    compound_statement       go to state 57
    declaration_list         go to state 58


State 39

  127 declarator: pointer_opt . direct_declarator

    ID   shift, and go to state 59
    '('  shift, and go to state 60

    direct_declarator  go to state 61


State 40

  128 pointer_opt: pointer .

    $default  reduce using rule 128 (pointer_opt)


State 41

   87 declaration_specifiers_opt: declaration_specifiers .

    $default  reduce using rule 87 (declaration_specifiers_opt)


State 42

   83 declaration_specifiers: storage_class_specifier declaration_specifiers_opt .

    $default  reduce using rule 83 (declaration_specifiers)


State 43

   84 declaration_specifiers: type_specifier declaration_specifiers_opt .

    $default  reduce using rule 84 (declaration_specifiers)


State 44

   85 declaration_specifiers: type_qualifier declaration_specifiers_opt .

    $default  reduce using rule 85 (declaration_specifiers)


State 45

   86 declaration_specifiers: function_specifier declaration_specifiers_opt .

    $default  reduce using rule 86 (declaration_specifiers)


State 46

    0 $accept: translation_unit $end .

    $default  accept


State 47

  200 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 200 (translation_unit)


State 48

  114 enum_specifier: ENUM ID_opt '{' . enumerator_list '}'
  115               | ENUM ID_opt '{' . enumerator_list ',' '}'

    CONST_ENUM  shift, and go to state 62

    enumerator_list  go to state 63
    enumerator       go to state 64


State 49

  146 type_qualifier_list: type_qualifier .

    $default  reduce using rule 146 (type_qualifier_list)


State 50

  144 pointer: '*' type_qualifier_list_opt .
  145        | '*' type_qualifier_list_opt . pointer

    '*'  shift, and go to state 34

    $default  reduce using rule 144 (pointer)

    pointer  go to state 65


State 51

  138 type_qualifier_list_opt: type_qualifier_list .
  147 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 138 (type_qualifier_list_opt)

    type_qualifier  go to state 66


State 52

   90 init_declarator_list: init_declarator_list ',' . init_declarator

    '*'  shift, and go to state 34

    $default  reduce using rule 129 (pointer_opt)

    init_declarator  go to state 67
    declarator       go to state 68
    pointer_opt      go to state 39
    pointer          go to state 40


State 53

  178 compound_statement: '{' . '}'
  179                   | '{' . block_item_list '}'

    AUTO            shift, and go to state 1
    BREAK           shift, and go to state 69
    CASE            shift, and go to state 70
    CHAR            shift, and go to state 2
    CONST           shift, and go to state 3
    CONTINUE        shift, and go to state 71
    DEFAULT         shift, and go to state 72
    DO              shift, and go to state 73
    DOUBLE          shift, and go to state 4
    ENUM            shift, and go to state 5
    EXTERN          shift, and go to state 6
    FLOAT           shift, and go to state 7
    FOR             shift, and go to state 74
    GOTO_KEYWORD    shift, and go to state 75
    IF              shift, and go to state 76
    INLINE          shift, and go to state 8
    INT             shift, and go to state 9
    LONG            shift, and go to state 10
    REGISTER        shift, and go to state 11
    RESTRICT        shift, and go to state 12
    RETURN_KEYWORD  shift, and go to state 77
    SHORT           shift, and go to state 13
    SIGNED          shift, and go to state 14
    SIZEOF          shift, and go to state 78
    STATIC          shift, and go to state 15
    SWITCH          shift, and go to state 79
    UNSIGNED        shift, and go to state 16
    VOID            shift, and go to state 17
    VOLATILE        shift, and go to state 18
    WHILE           shift, and go to state 80
    BOOL            shift, and go to state 19
    COMPLEX         shift, and go to state 20
    IMAGINARY       shift, and go to state 21
    INCREMENT       shift, and go to state 81
    DECREMENT       shift, and go to state 82
    ID              shift, and go to state 83
    CONST_INT       shift, and go to state 84
    CONST_FLT       shift, and go to state 85
    STRING          shift, and go to state 86
    CONST_CHAR      shift, and go to state 87
    '('             shift, and go to state 88
    '{'             shift, and go to state 53
    '}'             shift, and go to state 89
    '&'             shift, and go to state 90
    '*'             shift, and go to state 91
    '+'             shift, and go to state 92
    '-'             shift, and go to state 93
    '~'             shift, and go to state 94
    '!'             shift, and go to state 95

    $default  reduce using rule 186 (expression_opt)

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 112
    expression                 go to state 113
    declaration                go to state 114
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 115
    labeled_statement          go to state 116
    compound_statement         go to state 117
    block_item_list            go to state 118
    block_item                 go to state 119
    expression_statement       go to state 120
    expression_opt             go to state 121
    selection_statement        go to state 122
    iteration_statement        go to state 123
    jump_statement             go to state 124


State 54

   92 init_declarator: declarator '=' . initializer

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '{'         shift, and go to state 126
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 127
    initializer                go to state 128


State 55

  205 declaration_list: declaration .

    $default  reduce using rule 205 (declaration_list)


State 56

   81 declaration: declaration_specifiers . ';'
   82            | declaration_specifiers . init_declarator_list

    '*'  shift, and go to state 34
    ';'  shift, and go to state 35

    $default  reduce using rule 129 (pointer_opt)

    init_declarator_list  go to state 36
    init_declarator       go to state 37
    declarator            go to state 68
    pointer_opt           go to state 39
    pointer               go to state 40


State 57

  203 function_definition: declaration_specifiers declarator compound_statement .

    $default  reduce using rule 203 (function_definition)


State 58

  204 function_definition: declaration_specifiers declarator declaration_list . compound_statement
  206 declaration_list: declaration_list . declaration

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21
    '{'        shift, and go to state 53

    declaration              go to state 129
    declaration_specifiers   go to state 56
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    compound_statement       go to state 130


State 59

  130 direct_declarator: ID .

    $default  reduce using rule 130 (direct_declarator)


State 60

  131 direct_declarator: '(' . declarator ')'

    '*'  shift, and go to state 34

    $default  reduce using rule 129 (pointer_opt)

    declarator   go to state 131
    pointer_opt  go to state 39
    pointer      go to state 40


State 61

  127 declarator: pointer_opt direct_declarator .
  132 direct_declarator: direct_declarator . '[' type_qualifier_list_opt assignment_expression_opt ']'
  133                  | direct_declarator . '[' STATIC type_qualifier_list_opt assignment_expression ']'
  134                  | direct_declarator . '[' type_qualifier_list STATIC assignment_expression ']'
  135                  | direct_declarator . '[' type_qualifier_list_opt '*' ']'
  136                  | direct_declarator . '(' parameter_type_list ')'
  137                  | direct_declarator . '(' ID_list_opt ')'

    '('  shift, and go to state 132
    '['  shift, and go to state 133

    '('       [reduce using rule 127 (declarator)]
    $default  reduce using rule 127 (declarator)


State 62

  121 enumerator: CONST_ENUM .
  122           | CONST_ENUM . '=' constant_expression

    '='  shift, and go to state 134

    $default  reduce using rule 121 (enumerator)


State 63

  114 enum_specifier: ENUM ID_opt '{' enumerator_list . '}'
  115               | ENUM ID_opt '{' enumerator_list . ',' '}'
  120 enumerator_list: enumerator_list . ',' enumerator

    '}'  shift, and go to state 135
    ','  shift, and go to state 136


State 64

  119 enumerator_list: enumerator .

    $default  reduce using rule 119 (enumerator_list)


State 65

  145 pointer: '*' type_qualifier_list_opt pointer .

    $default  reduce using rule 145 (pointer)


State 66

  147 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 147 (type_qualifier_list)


State 67

   90 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 90 (init_declarator_list)


State 68

   91 init_declarator: declarator .
   92                | declarator . '=' initializer

    '='  shift, and go to state 54

    $default  reduce using rule 91 (init_declarator)


State 69

  196 jump_statement: BREAK . ';'

    ';'  shift, and go to state 137


State 70

  176 labeled_statement: CASE . constant_expression ':' statement

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 138
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 139
    constant_expression        go to state 140


State 71

  195 jump_statement: CONTINUE . ';'

    ';'  shift, and go to state 141


State 72

  177 labeled_statement: DEFAULT . ':' statement

    ':'  shift, and go to state 142


State 73

  191 iteration_statement: DO . M statement M WHILE '(' expression ')' ';'

    $default  reduce using rule 1 (M)

    M  go to state 143


State 74

  192 iteration_statement: FOR . '(' expression_opt ';' M expression_opt N ';' M expression_opt N ')' M statement
  193                    | FOR . '(' declaration expression_opt ';' expression_opt ')' statement

    '('  shift, and go to state 144


State 75

  194 jump_statement: GOTO_KEYWORD . ID ';'

    ID  shift, and go to state 145


State 76

  187 selection_statement: IF . '(' expression N ')' M statement N ELSE M statement N
  188                    | IF . '(' expression N ')' M statement N

    '('  shift, and go to state 146


State 77

  197 jump_statement: RETURN_KEYWORD . ';'
  198               | RETURN_KEYWORD . expression ';'

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95
    ';'         shift, and go to state 147

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 112
    expression                 go to state 148


State 78

   25 unary_expression: SIZEOF . unary_expression
   26                 | SIZEOF . '(' type_name ')'

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 149
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression  go to state 96
    postfix_expression  go to state 97
    unary_expression    go to state 150
    unary_operator      go to state 99


State 79

  189 selection_statement: SWITCH . '(' expression ')' statement

    '('  shift, and go to state 151


State 80

  190 iteration_statement: WHILE . M '(' expression N ')' M statement

    $default  reduce using rule 1 (M)

    M  go to state 152


State 81

   22 unary_expression: INCREMENT . unary_expression

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 153
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression  go to state 96
    postfix_expression  go to state 97
    unary_expression    go to state 154
    unary_operator      go to state 99


State 82

   23 unary_expression: DECREMENT . unary_expression

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 153
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression  go to state 96
    postfix_expression  go to state 97
    unary_expression    go to state 155
    unary_operator      go to state 99


State 83

    3 primary_expression: ID .
  175 labeled_statement: ID . ':' statement

    ':'  shift, and go to state 156

    $default  reduce using rule 3 (primary_expression)


State 84

    4 primary_expression: CONST_INT .

    $default  reduce using rule 4 (primary_expression)


State 85

    5 primary_expression: CONST_FLT .

    $default  reduce using rule 5 (primary_expression)


State 86

    7 primary_expression: STRING .

    $default  reduce using rule 7 (primary_expression)


State 87

    6 primary_expression: CONST_CHAR .

    $default  reduce using rule 6 (primary_expression)


State 88

    8 primary_expression: '(' . expression ')'
   17 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   18                   | '(' . type_name ')' '{' initializer_list ',' '}'
   34 cast_expression: '(' . type_name ')' cast_expression

    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    FLOAT       shift, and go to state 7
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    SIZEOF      shift, and go to state 78
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    BOOL        shift, and go to state 19
    COMPLEX     shift, and go to state 20
    IMAGINARY   shift, and go to state 21
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 112
    expression                 go to state 157
    type_specifier             go to state 158
    specifier_qualifier_list   go to state 159
    enum_specifier             go to state 26
    type_qualifier             go to state 160
    type_name                  go to state 161


State 89

  178 compound_statement: '{' '}' .

    $default  reduce using rule 178 (compound_statement)


State 90

   27 unary_operator: '&' .

    $default  reduce using rule 27 (unary_operator)


State 91

   28 unary_operator: '*' .

    $default  reduce using rule 28 (unary_operator)


State 92

   29 unary_operator: '+' .

    $default  reduce using rule 29 (unary_operator)


State 93

   30 unary_operator: '-' .

    $default  reduce using rule 30 (unary_operator)


State 94

   31 unary_operator: '~' .

    $default  reduce using rule 31 (unary_operator)


State 95

   32 unary_operator: '!' .

    $default  reduce using rule 32 (unary_operator)


State 96

    9 postfix_expression: primary_expression .

    $default  reduce using rule 9 (postfix_expression)


State 97

   10 postfix_expression: postfix_expression . '[' expression ']'
   11                   | postfix_expression . '(' ')'
   12                   | postfix_expression . '(' argument_expression_list ')'
   13                   | postfix_expression . '.' ID
   14                   | postfix_expression . POINTER ID
   15                   | postfix_expression . INCREMENT
   16                   | postfix_expression . DECREMENT
   21 unary_expression: postfix_expression .

    POINTER    shift, and go to state 162
    INCREMENT  shift, and go to state 163
    DECREMENT  shift, and go to state 164
    '('        shift, and go to state 165
    '['        shift, and go to state 166
    '.'        shift, and go to state 167

    INCREMENT  [reduce using rule 21 (unary_expression)]
    DECREMENT  [reduce using rule 21 (unary_expression)]
    '('        [reduce using rule 21 (unary_expression)]
    $default   reduce using rule 21 (unary_expression)


State 98

   33 cast_expression: unary_expression .
   77 assignment_expression: unary_expression . assignment_operator assignment_expression

    MULTIPLY_ASSIGN     shift, and go to state 168
    DIVIDE_ASSIGN       shift, and go to state 169
    MODULO_ASSIGN       shift, and go to state 170
    ADD_ASSIGN          shift, and go to state 171
    SUBTRACT_ASSIGN     shift, and go to state 172
    LEFT_SHIFT_ASSIGN   shift, and go to state 173
    RIGHT_SHIFT_ASSIGN  shift, and go to state 174
    AND_ASSIGN          shift, and go to state 175
    XOR_ASSIGN          shift, and go to state 176
    OR_ASSIGN           shift, and go to state 177
    '='                 shift, and go to state 178

    $default  reduce using rule 33 (cast_expression)

    assignment_operator  go to state 179


State 99

   24 unary_expression: unary_operator . cast_expression

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression  go to state 96
    postfix_expression  go to state 97
    unary_expression    go to state 138
    unary_operator      go to state 99
    cast_expression     go to state 180


State 100

   35 multiplicative_expression: cast_expression .

    $default  reduce using rule 35 (multiplicative_expression)


State 101

   36 multiplicative_expression: multiplicative_expression . '*' cast_expression
   37                          | multiplicative_expression . '/' cast_expression
   38                          | multiplicative_expression . '%' cast_expression
   39 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 181
    '/'  shift, and go to state 182
    '%'  shift, and go to state 183

    '*'       [reduce using rule 39 (additive_expression)]
    $default  reduce using rule 39 (additive_expression)


State 102

   40 additive_expression: additive_expression . '+' multiplicative_expression
   41                    | additive_expression . '-' multiplicative_expression
   42 shift_expression: additive_expression .

    '+'  shift, and go to state 184
    '-'  shift, and go to state 185

    '+'       [reduce using rule 42 (shift_expression)]
    '-'       [reduce using rule 42 (shift_expression)]
    $default  reduce using rule 42 (shift_expression)


State 103

   43 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   44                 | shift_expression . RIGHT_SHIFT additive_expression
   45 relational_expression: shift_expression .

    LEFT_SHIFT   shift, and go to state 186
    RIGHT_SHIFT  shift, and go to state 187

    $default  reduce using rule 45 (relational_expression)


State 104

   46 relational_expression: relational_expression . '<' shift_expression
   47                      | relational_expression . '>' shift_expression
   48                      | relational_expression . LESS_EQUALS shift_expression
   49                      | relational_expression . GREATER_EQUALS shift_expression
   50 equality_expression: relational_expression .

    LESS_EQUALS     shift, and go to state 188
    GREATER_EQUALS  shift, and go to state 189
    '<'             shift, and go to state 190
    '>'             shift, and go to state 191

    $default  reduce using rule 50 (equality_expression)


State 105

   51 equality_expression: equality_expression . EQUALS relational_expression
   52                    | equality_expression . NOT_EQUALS relational_expression
   53 AND_expression: equality_expression .

    EQUALS      shift, and go to state 192
    NOT_EQUALS  shift, and go to state 193

    $default  reduce using rule 53 (AND_expression)


State 106

   54 AND_expression: AND_expression . '&' equality_expression
   55 exclusive_OR_expression: AND_expression .

    '&'  shift, and go to state 194

    '&'       [reduce using rule 55 (exclusive_OR_expression)]
    $default  reduce using rule 55 (exclusive_OR_expression)


State 107

   56 exclusive_OR_expression: exclusive_OR_expression . '^' AND_expression
   57 inclusive_OR_expression: exclusive_OR_expression .

    '^'  shift, and go to state 195

    $default  reduce using rule 57 (inclusive_OR_expression)


State 108

   58 inclusive_OR_expression: inclusive_OR_expression . '|' exclusive_OR_expression
   59 logical_AND_expression: inclusive_OR_expression .

    '|'  shift, and go to state 196

    $default  reduce using rule 59 (logical_AND_expression)


State 109

   60 logical_AND_expression: logical_AND_expression . N AND_OP M inclusive_OR_expression N
   61 logical_OR_expression: logical_AND_expression .

    AND_OP    reduce using rule 2 (N)
    $default  reduce using rule 61 (logical_OR_expression)

    N  go to state 197


State 110

   62 logical_OR_expression: logical_OR_expression . N OR_OP M logical_AND_expression N
   63 conditional_expression: logical_OR_expression .
   64                       | logical_OR_expression . N '?' M expression N ':' M conditional_expression

    OR_OP     reduce using rule 2 (N)
    '?'       reduce using rule 2 (N)
    $default  reduce using rule 63 (conditional_expression)

    N  go to state 198


State 111

   76 assignment_expression: conditional_expression .

    $default  reduce using rule 76 (assignment_expression)


State 112

   79 expression: assignment_expression .

    $default  reduce using rule 79 (expression)


State 113

   80 expression: expression . ',' assignment_expression
  185 expression_opt: expression .

    ','  shift, and go to state 199

    $default  reduce using rule 185 (expression_opt)


State 114

  182 block_item: declaration .

    $default  reduce using rule 182 (block_item)


State 115

  183 block_item: statement .

    $default  reduce using rule 183 (block_item)


State 116

  169 statement: labeled_statement .

    $default  reduce using rule 169 (statement)


State 117

  170 statement: compound_statement .

    $default  reduce using rule 170 (statement)


State 118

  179 compound_statement: '{' block_item_list . '}'
  181 block_item_list: block_item_list . M block_item

    '}'  shift, and go to state 200

    $default  reduce using rule 1 (M)

    M  go to state 201


State 119

  180 block_item_list: block_item .

    $default  reduce using rule 180 (block_item_list)


State 120

  171 statement: expression_statement .

    $default  reduce using rule 171 (statement)


State 121

  184 expression_statement: expression_opt . ';'

    ';'  shift, and go to state 202


State 122

  172 statement: selection_statement .

    $default  reduce using rule 172 (statement)


State 123

  173 statement: iteration_statement .

    $default  reduce using rule 173 (statement)


State 124

  174 statement: jump_statement .

    $default  reduce using rule 174 (statement)


State 125

    3 primary_expression: ID .

    $default  reduce using rule 3 (primary_expression)


State 126

  158 initializer: '{' . initializer_list '}'
  159            | '{' . initializer_list ',' '}'

    '['  shift, and go to state 203
    '.'  shift, and go to state 204

    $default  reduce using rule 163 (designation_opt)

    initializer_list  go to state 205
    designation_opt   go to state 206
    designation       go to state 207
    designator_list   go to state 208
    designator        go to state 209


State 127

  157 initializer: assignment_expression .

    $default  reduce using rule 157 (initializer)


State 128

   92 init_declarator: declarator '=' initializer .

    $default  reduce using rule 92 (init_declarator)


State 129

  206 declaration_list: declaration_list declaration .

    $default  reduce using rule 206 (declaration_list)


State 130

  204 function_definition: declaration_specifiers declarator declaration_list compound_statement .

    $default  reduce using rule 204 (function_definition)


State 131

  131 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 210


State 132

  136 direct_declarator: direct_declarator '(' . parameter_type_list ')'
  137                  | direct_declarator '(' . ID_list_opt ')'

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21
    ID         shift, and go to state 211

    $default  reduce using rule 143 (ID_list_opt)

    declaration_specifiers   go to state 212
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    ID_list_opt              go to state 213
    parameter_type_list      go to state 214
    parameter_list           go to state 215
    parameter_declaration    go to state 216
    ID_list                  go to state 217


State 133

  132 direct_declarator: direct_declarator '[' . type_qualifier_list_opt assignment_expression_opt ']'
  133                  | direct_declarator '[' . STATIC type_qualifier_list_opt assignment_expression ']'
  134                  | direct_declarator '[' . type_qualifier_list STATIC assignment_expression ']'
  135                  | direct_declarator '[' . type_qualifier_list_opt '*' ']'

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    STATIC    shift, and go to state 218
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 139 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list_opt  go to state 219
    type_qualifier_list      go to state 220


State 134

  122 enumerator: CONST_ENUM '=' . constant_expression

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 138
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 139
    constant_expression        go to state 221


State 135

  114 enum_specifier: ENUM ID_opt '{' enumerator_list '}' .

    $default  reduce using rule 114 (enum_specifier)


State 136

  115 enum_specifier: ENUM ID_opt '{' enumerator_list ',' . '}'
  120 enumerator_list: enumerator_list ',' . enumerator

    CONST_ENUM  shift, and go to state 62
    '}'         shift, and go to state 222

    enumerator  go to state 223


State 137

  196 jump_statement: BREAK ';' .

    $default  reduce using rule 196 (jump_statement)


State 138

   33 cast_expression: unary_expression .

    $default  reduce using rule 33 (cast_expression)


State 139

   78 constant_expression: conditional_expression .

    $default  reduce using rule 78 (constant_expression)


State 140

  176 labeled_statement: CASE constant_expression . ':' statement

    ':'  shift, and go to state 224


State 141

  195 jump_statement: CONTINUE ';' .

    $default  reduce using rule 195 (jump_statement)


State 142

  177 labeled_statement: DEFAULT ':' . statement

    BREAK           shift, and go to state 69
    CASE            shift, and go to state 70
    CONTINUE        shift, and go to state 71
    DEFAULT         shift, and go to state 72
    DO              shift, and go to state 73
    FOR             shift, and go to state 74
    GOTO_KEYWORD    shift, and go to state 75
    IF              shift, and go to state 76
    RETURN_KEYWORD  shift, and go to state 77
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 79
    WHILE           shift, and go to state 80
    INCREMENT       shift, and go to state 81
    DECREMENT       shift, and go to state 82
    ID              shift, and go to state 83
    CONST_INT       shift, and go to state 84
    CONST_FLT       shift, and go to state 85
    STRING          shift, and go to state 86
    CONST_CHAR      shift, and go to state 87
    '('             shift, and go to state 88
    '{'             shift, and go to state 53
    '&'             shift, and go to state 90
    '*'             shift, and go to state 91
    '+'             shift, and go to state 92
    '-'             shift, and go to state 93
    '~'             shift, and go to state 94
    '!'             shift, and go to state 95

    $default  reduce using rule 186 (expression_opt)

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 112
    expression                 go to state 113
    statement                  go to state 225
    labeled_statement          go to state 116
    compound_statement         go to state 117
    expression_statement       go to state 120
    expression_opt             go to state 121
    selection_statement        go to state 122
    iteration_statement        go to state 123
    jump_statement             go to state 124


State 143

  191 iteration_statement: DO M . statement M WHILE '(' expression ')' ';'

    BREAK           shift, and go to state 69
    CASE            shift, and go to state 70
    CONTINUE        shift, and go to state 71
    DEFAULT         shift, and go to state 72
    DO              shift, and go to state 73
    FOR             shift, and go to state 74
    GOTO_KEYWORD    shift, and go to state 75
    IF              shift, and go to state 76
    RETURN_KEYWORD  shift, and go to state 77
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 79
    WHILE           shift, and go to state 80
    INCREMENT       shift, and go to state 81
    DECREMENT       shift, and go to state 82
    ID              shift, and go to state 83
    CONST_INT       shift, and go to state 84
    CONST_FLT       shift, and go to state 85
    STRING          shift, and go to state 86
    CONST_CHAR      shift, and go to state 87
    '('             shift, and go to state 88
    '{'             shift, and go to state 53
    '&'             shift, and go to state 90
    '*'             shift, and go to state 91
    '+'             shift, and go to state 92
    '-'             shift, and go to state 93
    '~'             shift, and go to state 94
    '!'             shift, and go to state 95

    $default  reduce using rule 186 (expression_opt)

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 112
    expression                 go to state 113
    statement                  go to state 226
    labeled_statement          go to state 116
    compound_statement         go to state 117
    expression_statement       go to state 120
    expression_opt             go to state 121
    selection_statement        go to state 122
    iteration_statement        go to state 123
    jump_statement             go to state 124


State 144

  192 iteration_statement: FOR '(' . expression_opt ';' M expression_opt N ';' M expression_opt N ')' M statement
  193                    | FOR '(' . declaration expression_opt ';' expression_opt ')' statement

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    SIZEOF      shift, and go to state 78
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    BOOL        shift, and go to state 19
    COMPLEX     shift, and go to state 20
    IMAGINARY   shift, and go to state 21
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    $default  reduce using rule 186 (expression_opt)

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 112
    expression                 go to state 113
    declaration                go to state 227
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    expression_opt             go to state 228


State 145

  194 jump_statement: GOTO_KEYWORD ID . ';'

    ';'  shift, and go to state 229


State 146

  187 selection_statement: IF '(' . expression N ')' M statement N ELSE M statement N
  188                    | IF '(' . expression N ')' M statement N

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 112
    expression                 go to state 230


State 147

  197 jump_statement: RETURN_KEYWORD ';' .

    $default  reduce using rule 197 (jump_statement)


State 148

   80 expression: expression . ',' assignment_expression
  198 jump_statement: RETURN_KEYWORD expression . ';'

    ','  shift, and go to state 199
    ';'  shift, and go to state 231


State 149

    8 primary_expression: '(' . expression ')'
   17 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   18                   | '(' . type_name ')' '{' initializer_list ',' '}'
   26 unary_expression: SIZEOF '(' . type_name ')'

    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    FLOAT       shift, and go to state 7
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    SIZEOF      shift, and go to state 78
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    BOOL        shift, and go to state 19
    COMPLEX     shift, and go to state 20
    IMAGINARY   shift, and go to state 21
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 112
    expression                 go to state 157
    type_specifier             go to state 158
    specifier_qualifier_list   go to state 159
    enum_specifier             go to state 26
    type_qualifier             go to state 160
    type_name                  go to state 232


State 150

   25 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 25 (unary_expression)


State 151

  189 selection_statement: SWITCH '(' . expression ')' statement

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 112
    expression                 go to state 233


State 152

  190 iteration_statement: WHILE M . '(' expression N ')' M statement

    '('  shift, and go to state 234


State 153

    8 primary_expression: '(' . expression ')'
   17 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   18                   | '(' . type_name ')' '{' initializer_list ',' '}'

    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    FLOAT       shift, and go to state 7
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    SIZEOF      shift, and go to state 78
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    BOOL        shift, and go to state 19
    COMPLEX     shift, and go to state 20
    IMAGINARY   shift, and go to state 21
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 112
    expression                 go to state 157
    type_specifier             go to state 158
    specifier_qualifier_list   go to state 159
    enum_specifier             go to state 26
    type_qualifier             go to state 160
    type_name                  go to state 235


State 154

   22 unary_expression: INCREMENT unary_expression .

    $default  reduce using rule 22 (unary_expression)


State 155

   23 unary_expression: DECREMENT unary_expression .

    $default  reduce using rule 23 (unary_expression)


State 156

  175 labeled_statement: ID ':' . statement

    BREAK           shift, and go to state 69
    CASE            shift, and go to state 70
    CONTINUE        shift, and go to state 71
    DEFAULT         shift, and go to state 72
    DO              shift, and go to state 73
    FOR             shift, and go to state 74
    GOTO_KEYWORD    shift, and go to state 75
    IF              shift, and go to state 76
    RETURN_KEYWORD  shift, and go to state 77
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 79
    WHILE           shift, and go to state 80
    INCREMENT       shift, and go to state 81
    DECREMENT       shift, and go to state 82
    ID              shift, and go to state 83
    CONST_INT       shift, and go to state 84
    CONST_FLT       shift, and go to state 85
    STRING          shift, and go to state 86
    CONST_CHAR      shift, and go to state 87
    '('             shift, and go to state 88
    '{'             shift, and go to state 53
    '&'             shift, and go to state 90
    '*'             shift, and go to state 91
    '+'             shift, and go to state 92
    '-'             shift, and go to state 93
    '~'             shift, and go to state 94
    '!'             shift, and go to state 95

    $default  reduce using rule 186 (expression_opt)

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 112
    expression                 go to state 113
    statement                  go to state 236
    labeled_statement          go to state 116
    compound_statement         go to state 117
    expression_statement       go to state 120
    expression_opt             go to state 121
    selection_statement        go to state 122
    iteration_statement        go to state 123
    jump_statement             go to state 124


State 157

    8 primary_expression: '(' expression . ')'
   80 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 237
    ','  shift, and go to state 199


State 158

  110 specifier_qualifier_list: type_specifier . specifier_qualifier_list_opt

    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    FLOAT      shift, and go to state 7
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 113 (specifier_qualifier_list_opt)

    type_specifier                go to state 158
    specifier_qualifier_list      go to state 238
    specifier_qualifier_list_opt  go to state 239
    enum_specifier                go to state 26
    type_qualifier                go to state 160


State 159

  156 type_name: specifier_qualifier_list .

    $default  reduce using rule 156 (type_name)


State 160

  111 specifier_qualifier_list: type_qualifier . specifier_qualifier_list_opt

    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    FLOAT      shift, and go to state 7
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 113 (specifier_qualifier_list_opt)

    type_specifier                go to state 158
    specifier_qualifier_list      go to state 238
    specifier_qualifier_list_opt  go to state 240
    enum_specifier                go to state 26
    type_qualifier                go to state 160


State 161

   17 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   18                   | '(' type_name . ')' '{' initializer_list ',' '}'
   34 cast_expression: '(' type_name . ')' cast_expression

    ')'  shift, and go to state 241


State 162

   14 postfix_expression: postfix_expression POINTER . ID

    ID  shift, and go to state 242


State 163

   15 postfix_expression: postfix_expression INCREMENT .

    $default  reduce using rule 15 (postfix_expression)


State 164

   16 postfix_expression: postfix_expression DECREMENT .

    $default  reduce using rule 16 (postfix_expression)


State 165

   11 postfix_expression: postfix_expression '(' . ')'
   12                   | postfix_expression '(' . argument_expression_list ')'

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    ')'         shift, and go to state 243
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    argument_expression_list   go to state 244
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 245


State 166

   10 postfix_expression: postfix_expression '[' . expression ']'

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 112
    expression                 go to state 246


State 167

   13 postfix_expression: postfix_expression '.' . ID

    ID  shift, and go to state 247


State 168

   66 assignment_operator: MULTIPLY_ASSIGN .

    $default  reduce using rule 66 (assignment_operator)


State 169

   67 assignment_operator: DIVIDE_ASSIGN .

    $default  reduce using rule 67 (assignment_operator)


State 170

   68 assignment_operator: MODULO_ASSIGN .

    $default  reduce using rule 68 (assignment_operator)


State 171

   69 assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 69 (assignment_operator)


State 172

   70 assignment_operator: SUBTRACT_ASSIGN .

    $default  reduce using rule 70 (assignment_operator)


State 173

   71 assignment_operator: LEFT_SHIFT_ASSIGN .

    $default  reduce using rule 71 (assignment_operator)


State 174

   72 assignment_operator: RIGHT_SHIFT_ASSIGN .

    $default  reduce using rule 72 (assignment_operator)


State 175

   73 assignment_operator: AND_ASSIGN .

    $default  reduce using rule 73 (assignment_operator)


State 176

   74 assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 74 (assignment_operator)


State 177

   75 assignment_operator: OR_ASSIGN .

    $default  reduce using rule 75 (assignment_operator)


State 178

   65 assignment_operator: '=' .

    $default  reduce using rule 65 (assignment_operator)


State 179

   77 assignment_expression: unary_expression assignment_operator . assignment_expression

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 248


State 180

   24 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 24 (unary_expression)


State 181

   36 multiplicative_expression: multiplicative_expression '*' . cast_expression

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression  go to state 96
    postfix_expression  go to state 97
    unary_expression    go to state 138
    unary_operator      go to state 99
    cast_expression     go to state 249


State 182

   37 multiplicative_expression: multiplicative_expression '/' . cast_expression

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression  go to state 96
    postfix_expression  go to state 97
    unary_expression    go to state 138
    unary_operator      go to state 99
    cast_expression     go to state 250


State 183

   38 multiplicative_expression: multiplicative_expression '%' . cast_expression

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression  go to state 96
    postfix_expression  go to state 97
    unary_expression    go to state 138
    unary_operator      go to state 99
    cast_expression     go to state 251


State 184

   40 additive_expression: additive_expression '+' . multiplicative_expression

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 138
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 252


State 185

   41 additive_expression: additive_expression '-' . multiplicative_expression

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 138
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 253


State 186

   43 shift_expression: shift_expression LEFT_SHIFT . additive_expression

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 138
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 254


State 187

   44 shift_expression: shift_expression RIGHT_SHIFT . additive_expression

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 138
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 255


State 188

   48 relational_expression: relational_expression LESS_EQUALS . shift_expression

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 138
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 256


State 189

   49 relational_expression: relational_expression GREATER_EQUALS . shift_expression

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 138
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 257


State 190

   46 relational_expression: relational_expression '<' . shift_expression

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 138
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 258


State 191

   47 relational_expression: relational_expression '>' . shift_expression

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 138
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 259


State 192

   51 equality_expression: equality_expression EQUALS . relational_expression

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 138
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 260


State 193

   52 equality_expression: equality_expression NOT_EQUALS . relational_expression

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 138
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 261


State 194

   54 AND_expression: AND_expression '&' . equality_expression

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 138
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 262


State 195

   56 exclusive_OR_expression: exclusive_OR_expression '^' . AND_expression

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 138
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 263


State 196

   58 inclusive_OR_expression: inclusive_OR_expression '|' . exclusive_OR_expression

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 138
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 264


State 197

   60 logical_AND_expression: logical_AND_expression N . AND_OP M inclusive_OR_expression N

    AND_OP  shift, and go to state 265


State 198

   62 logical_OR_expression: logical_OR_expression N . OR_OP M logical_AND_expression N
   64 conditional_expression: logical_OR_expression N . '?' M expression N ':' M conditional_expression

    OR_OP  shift, and go to state 266
    '?'    shift, and go to state 267


State 199

   80 expression: expression ',' . assignment_expression

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 268


State 200

  179 compound_statement: '{' block_item_list '}' .

    $default  reduce using rule 179 (compound_statement)


State 201

  181 block_item_list: block_item_list M . block_item

    AUTO            shift, and go to state 1
    BREAK           shift, and go to state 69
    CASE            shift, and go to state 70
    CHAR            shift, and go to state 2
    CONST           shift, and go to state 3
    CONTINUE        shift, and go to state 71
    DEFAULT         shift, and go to state 72
    DO              shift, and go to state 73
    DOUBLE          shift, and go to state 4
    ENUM            shift, and go to state 5
    EXTERN          shift, and go to state 6
    FLOAT           shift, and go to state 7
    FOR             shift, and go to state 74
    GOTO_KEYWORD    shift, and go to state 75
    IF              shift, and go to state 76
    INLINE          shift, and go to state 8
    INT             shift, and go to state 9
    LONG            shift, and go to state 10
    REGISTER        shift, and go to state 11
    RESTRICT        shift, and go to state 12
    RETURN_KEYWORD  shift, and go to state 77
    SHORT           shift, and go to state 13
    SIGNED          shift, and go to state 14
    SIZEOF          shift, and go to state 78
    STATIC          shift, and go to state 15
    SWITCH          shift, and go to state 79
    UNSIGNED        shift, and go to state 16
    VOID            shift, and go to state 17
    VOLATILE        shift, and go to state 18
    WHILE           shift, and go to state 80
    BOOL            shift, and go to state 19
    COMPLEX         shift, and go to state 20
    IMAGINARY       shift, and go to state 21
    INCREMENT       shift, and go to state 81
    DECREMENT       shift, and go to state 82
    ID              shift, and go to state 83
    CONST_INT       shift, and go to state 84
    CONST_FLT       shift, and go to state 85
    STRING          shift, and go to state 86
    CONST_CHAR      shift, and go to state 87
    '('             shift, and go to state 88
    '{'             shift, and go to state 53
    '&'             shift, and go to state 90
    '*'             shift, and go to state 91
    '+'             shift, and go to state 92
    '-'             shift, and go to state 93
    '~'             shift, and go to state 94
    '!'             shift, and go to state 95

    $default  reduce using rule 186 (expression_opt)

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 112
    expression                 go to state 113
    declaration                go to state 114
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 115
    labeled_statement          go to state 116
    compound_statement         go to state 117
    block_item                 go to state 269
    expression_statement       go to state 120
    expression_opt             go to state 121
    selection_statement        go to state 122
    iteration_statement        go to state 123
    jump_statement             go to state 124


State 202

  184 expression_statement: expression_opt ';' .

    $default  reduce using rule 184 (expression_statement)


State 203

  167 designator: '[' . constant_expression ']'

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 138
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 139
    constant_expression        go to state 270


State 204

  168 designator: '.' . ID

    ID  shift, and go to state 271


State 205

  158 initializer: '{' initializer_list . '}'
  159            | '{' initializer_list . ',' '}'
  161 initializer_list: initializer_list . ',' designation_opt initializer

    '}'  shift, and go to state 272
    ','  shift, and go to state 273


State 206

  160 initializer_list: designation_opt . initializer

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '{'         shift, and go to state 126
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 127
    initializer                go to state 274


State 207

  162 designation_opt: designation .

    $default  reduce using rule 162 (designation_opt)


State 208

  164 designation: designator_list . '='
  166 designator_list: designator_list . designator

    '['  shift, and go to state 203
    '.'  shift, and go to state 204
    '='  shift, and go to state 275

    designator  go to state 276


State 209

  165 designator_list: designator .

    $default  reduce using rule 165 (designator_list)


State 210

  131 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 131 (direct_declarator)


State 211

  154 ID_list: ID .

    $default  reduce using rule 154 (ID_list)


State 212

  152 parameter_declaration: declaration_specifiers . declarator
  153                      | declaration_specifiers .

    '*'  shift, and go to state 34

    ')'       reduce using rule 153 (parameter_declaration)
    ','       reduce using rule 153 (parameter_declaration)
    $default  reduce using rule 129 (pointer_opt)

    declarator   go to state 277
    pointer_opt  go to state 39
    pointer      go to state 40


State 213

  137 direct_declarator: direct_declarator '(' ID_list_opt . ')'

    ')'  shift, and go to state 278


State 214

  136 direct_declarator: direct_declarator '(' parameter_type_list . ')'

    ')'  shift, and go to state 279


State 215

  148 parameter_type_list: parameter_list .
  149                    | parameter_list . ',' ELLIPSIS
  151 parameter_list: parameter_list . ',' parameter_declaration

    ','  shift, and go to state 280

    $default  reduce using rule 148 (parameter_type_list)


State 216

  150 parameter_list: parameter_declaration .

    $default  reduce using rule 150 (parameter_list)


State 217

  142 ID_list_opt: ID_list .
  155 ID_list: ID_list . ',' ID

    ','  shift, and go to state 281

    $default  reduce using rule 142 (ID_list_opt)


State 218

  133 direct_declarator: direct_declarator '[' STATIC . type_qualifier_list_opt assignment_expression ']'

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 139 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list_opt  go to state 282
    type_qualifier_list      go to state 51


State 219

  132 direct_declarator: direct_declarator '[' type_qualifier_list_opt . assignment_expression_opt ']'
  135                  | direct_declarator '[' type_qualifier_list_opt . '*' ']'

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 283
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    $default  reduce using rule 141 (assignment_expression_opt)

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 284
    assignment_expression_opt  go to state 285


State 220

  134 direct_declarator: direct_declarator '[' type_qualifier_list . STATIC assignment_expression ']'
  138 type_qualifier_list_opt: type_qualifier_list .
  147 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    STATIC    shift, and go to state 286
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 138 (type_qualifier_list_opt)

    type_qualifier  go to state 66


State 221

  122 enumerator: CONST_ENUM '=' constant_expression .

    $default  reduce using rule 122 (enumerator)


State 222

  115 enum_specifier: ENUM ID_opt '{' enumerator_list ',' '}' .

    $default  reduce using rule 115 (enum_specifier)


State 223

  120 enumerator_list: enumerator_list ',' enumerator .

    $default  reduce using rule 120 (enumerator_list)


State 224

  176 labeled_statement: CASE constant_expression ':' . statement

    BREAK           shift, and go to state 69
    CASE            shift, and go to state 70
    CONTINUE        shift, and go to state 71
    DEFAULT         shift, and go to state 72
    DO              shift, and go to state 73
    FOR             shift, and go to state 74
    GOTO_KEYWORD    shift, and go to state 75
    IF              shift, and go to state 76
    RETURN_KEYWORD  shift, and go to state 77
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 79
    WHILE           shift, and go to state 80
    INCREMENT       shift, and go to state 81
    DECREMENT       shift, and go to state 82
    ID              shift, and go to state 83
    CONST_INT       shift, and go to state 84
    CONST_FLT       shift, and go to state 85
    STRING          shift, and go to state 86
    CONST_CHAR      shift, and go to state 87
    '('             shift, and go to state 88
    '{'             shift, and go to state 53
    '&'             shift, and go to state 90
    '*'             shift, and go to state 91
    '+'             shift, and go to state 92
    '-'             shift, and go to state 93
    '~'             shift, and go to state 94
    '!'             shift, and go to state 95

    $default  reduce using rule 186 (expression_opt)

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 112
    expression                 go to state 113
    statement                  go to state 287
    labeled_statement          go to state 116
    compound_statement         go to state 117
    expression_statement       go to state 120
    expression_opt             go to state 121
    selection_statement        go to state 122
    iteration_statement        go to state 123
    jump_statement             go to state 124


State 225

  177 labeled_statement: DEFAULT ':' statement .

    $default  reduce using rule 177 (labeled_statement)


State 226

  191 iteration_statement: DO M statement . M WHILE '(' expression ')' ';'

    $default  reduce using rule 1 (M)

    M  go to state 288


State 227

  193 iteration_statement: FOR '(' declaration . expression_opt ';' expression_opt ')' statement

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    $default  reduce using rule 186 (expression_opt)

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 112
    expression                 go to state 113
    expression_opt             go to state 289


State 228

  192 iteration_statement: FOR '(' expression_opt . ';' M expression_opt N ';' M expression_opt N ')' M statement

    ';'  shift, and go to state 290


State 229

  194 jump_statement: GOTO_KEYWORD ID ';' .

    $default  reduce using rule 194 (jump_statement)


State 230

   80 expression: expression . ',' assignment_expression
  187 selection_statement: IF '(' expression . N ')' M statement N ELSE M statement N
  188                    | IF '(' expression . N ')' M statement N

    ','  shift, and go to state 199

    $default  reduce using rule 2 (N)

    N  go to state 291


State 231

  198 jump_statement: RETURN_KEYWORD expression ';' .

    $default  reduce using rule 198 (jump_statement)


State 232

   17 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   18                   | '(' type_name . ')' '{' initializer_list ',' '}'
   26 unary_expression: SIZEOF '(' type_name . ')'

    ')'  shift, and go to state 292


State 233

   80 expression: expression . ',' assignment_expression
  189 selection_statement: SWITCH '(' expression . ')' statement

    ')'  shift, and go to state 293
    ','  shift, and go to state 199


State 234

  190 iteration_statement: WHILE M '(' . expression N ')' M statement

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 112
    expression                 go to state 294


State 235

   17 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   18                   | '(' type_name . ')' '{' initializer_list ',' '}'

    ')'  shift, and go to state 295


State 236

  175 labeled_statement: ID ':' statement .

    $default  reduce using rule 175 (labeled_statement)


State 237

    8 primary_expression: '(' expression ')' .

    $default  reduce using rule 8 (primary_expression)


State 238

  112 specifier_qualifier_list_opt: specifier_qualifier_list .

    $default  reduce using rule 112 (specifier_qualifier_list_opt)


State 239

  110 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt .

    $default  reduce using rule 110 (specifier_qualifier_list)


State 240

  111 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt .

    $default  reduce using rule 111 (specifier_qualifier_list)


State 241

   17 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   18                   | '(' type_name ')' . '{' initializer_list ',' '}'
   34 cast_expression: '(' type_name ')' . cast_expression

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '{'         shift, and go to state 296
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression  go to state 96
    postfix_expression  go to state 97
    unary_expression    go to state 138
    unary_operator      go to state 99
    cast_expression     go to state 297


State 242

   14 postfix_expression: postfix_expression POINTER ID .

    $default  reduce using rule 14 (postfix_expression)


State 243

   11 postfix_expression: postfix_expression '(' ')' .

    $default  reduce using rule 11 (postfix_expression)


State 244

   12 postfix_expression: postfix_expression '(' argument_expression_list . ')'
   20 argument_expression_list: argument_expression_list . ',' assignment_expression

    ')'  shift, and go to state 298
    ','  shift, and go to state 299


State 245

   19 argument_expression_list: assignment_expression .

    $default  reduce using rule 19 (argument_expression_list)


State 246

   10 postfix_expression: postfix_expression '[' expression . ']'
   80 expression: expression . ',' assignment_expression

    ']'  shift, and go to state 300
    ','  shift, and go to state 199


State 247

   13 postfix_expression: postfix_expression '.' ID .

    $default  reduce using rule 13 (postfix_expression)


State 248

   77 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 77 (assignment_expression)


State 249

   36 multiplicative_expression: multiplicative_expression '*' cast_expression .

    $default  reduce using rule 36 (multiplicative_expression)


State 250

   37 multiplicative_expression: multiplicative_expression '/' cast_expression .

    $default  reduce using rule 37 (multiplicative_expression)


State 251

   38 multiplicative_expression: multiplicative_expression '%' cast_expression .

    $default  reduce using rule 38 (multiplicative_expression)


State 252

   36 multiplicative_expression: multiplicative_expression . '*' cast_expression
   37                          | multiplicative_expression . '/' cast_expression
   38                          | multiplicative_expression . '%' cast_expression
   40 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 181
    '/'  shift, and go to state 182
    '%'  shift, and go to state 183

    '*'       [reduce using rule 40 (additive_expression)]
    $default  reduce using rule 40 (additive_expression)


State 253

   36 multiplicative_expression: multiplicative_expression . '*' cast_expression
   37                          | multiplicative_expression . '/' cast_expression
   38                          | multiplicative_expression . '%' cast_expression
   41 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 181
    '/'  shift, and go to state 182
    '%'  shift, and go to state 183

    '*'       [reduce using rule 41 (additive_expression)]
    $default  reduce using rule 41 (additive_expression)


State 254

   40 additive_expression: additive_expression . '+' multiplicative_expression
   41                    | additive_expression . '-' multiplicative_expression
   43 shift_expression: shift_expression LEFT_SHIFT additive_expression .

    '+'  shift, and go to state 184
    '-'  shift, and go to state 185

    '+'       [reduce using rule 43 (shift_expression)]
    '-'       [reduce using rule 43 (shift_expression)]
    $default  reduce using rule 43 (shift_expression)


State 255

   40 additive_expression: additive_expression . '+' multiplicative_expression
   41                    | additive_expression . '-' multiplicative_expression
   44 shift_expression: shift_expression RIGHT_SHIFT additive_expression .

    '+'  shift, and go to state 184
    '-'  shift, and go to state 185

    '+'       [reduce using rule 44 (shift_expression)]
    '-'       [reduce using rule 44 (shift_expression)]
    $default  reduce using rule 44 (shift_expression)


State 256

   43 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   44                 | shift_expression . RIGHT_SHIFT additive_expression
   48 relational_expression: relational_expression LESS_EQUALS shift_expression .

    LEFT_SHIFT   shift, and go to state 186
    RIGHT_SHIFT  shift, and go to state 187

    $default  reduce using rule 48 (relational_expression)


State 257

   43 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   44                 | shift_expression . RIGHT_SHIFT additive_expression
   49 relational_expression: relational_expression GREATER_EQUALS shift_expression .

    LEFT_SHIFT   shift, and go to state 186
    RIGHT_SHIFT  shift, and go to state 187

    $default  reduce using rule 49 (relational_expression)


State 258

   43 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   44                 | shift_expression . RIGHT_SHIFT additive_expression
   46 relational_expression: relational_expression '<' shift_expression .

    LEFT_SHIFT   shift, and go to state 186
    RIGHT_SHIFT  shift, and go to state 187

    $default  reduce using rule 46 (relational_expression)


State 259

   43 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   44                 | shift_expression . RIGHT_SHIFT additive_expression
   47 relational_expression: relational_expression '>' shift_expression .

    LEFT_SHIFT   shift, and go to state 186
    RIGHT_SHIFT  shift, and go to state 187

    $default  reduce using rule 47 (relational_expression)


State 260

   46 relational_expression: relational_expression . '<' shift_expression
   47                      | relational_expression . '>' shift_expression
   48                      | relational_expression . LESS_EQUALS shift_expression
   49                      | relational_expression . GREATER_EQUALS shift_expression
   51 equality_expression: equality_expression EQUALS relational_expression .

    LESS_EQUALS     shift, and go to state 188
    GREATER_EQUALS  shift, and go to state 189
    '<'             shift, and go to state 190
    '>'             shift, and go to state 191

    $default  reduce using rule 51 (equality_expression)


State 261

   46 relational_expression: relational_expression . '<' shift_expression
   47                      | relational_expression . '>' shift_expression
   48                      | relational_expression . LESS_EQUALS shift_expression
   49                      | relational_expression . GREATER_EQUALS shift_expression
   52 equality_expression: equality_expression NOT_EQUALS relational_expression .

    LESS_EQUALS     shift, and go to state 188
    GREATER_EQUALS  shift, and go to state 189
    '<'             shift, and go to state 190
    '>'             shift, and go to state 191

    $default  reduce using rule 52 (equality_expression)


State 262

   51 equality_expression: equality_expression . EQUALS relational_expression
   52                    | equality_expression . NOT_EQUALS relational_expression
   54 AND_expression: AND_expression '&' equality_expression .

    EQUALS      shift, and go to state 192
    NOT_EQUALS  shift, and go to state 193

    $default  reduce using rule 54 (AND_expression)


State 263

   54 AND_expression: AND_expression . '&' equality_expression
   56 exclusive_OR_expression: exclusive_OR_expression '^' AND_expression .

    '&'  shift, and go to state 194

    '&'       [reduce using rule 56 (exclusive_OR_expression)]
    $default  reduce using rule 56 (exclusive_OR_expression)


State 264

   56 exclusive_OR_expression: exclusive_OR_expression . '^' AND_expression
   58 inclusive_OR_expression: inclusive_OR_expression '|' exclusive_OR_expression .

    '^'  shift, and go to state 195

    $default  reduce using rule 58 (inclusive_OR_expression)


State 265

   60 logical_AND_expression: logical_AND_expression N AND_OP . M inclusive_OR_expression N

    $default  reduce using rule 1 (M)

    M  go to state 301


State 266

   62 logical_OR_expression: logical_OR_expression N OR_OP . M logical_AND_expression N

    $default  reduce using rule 1 (M)

    M  go to state 302


State 267

   64 conditional_expression: logical_OR_expression N '?' . M expression N ':' M conditional_expression

    $default  reduce using rule 1 (M)

    M  go to state 303


State 268

   80 expression: expression ',' assignment_expression .

    $default  reduce using rule 80 (expression)


State 269

  181 block_item_list: block_item_list M block_item .

    $default  reduce using rule 181 (block_item_list)


State 270

  167 designator: '[' constant_expression . ']'

    ']'  shift, and go to state 304


State 271

  168 designator: '.' ID .

    $default  reduce using rule 168 (designator)


State 272

  158 initializer: '{' initializer_list '}' .

    $default  reduce using rule 158 (initializer)


State 273

  159 initializer: '{' initializer_list ',' . '}'
  161 initializer_list: initializer_list ',' . designation_opt initializer

    '['  shift, and go to state 203
    '.'  shift, and go to state 204
    '}'  shift, and go to state 305

    $default  reduce using rule 163 (designation_opt)

    designation_opt  go to state 306
    designation      go to state 207
    designator_list  go to state 208
    designator       go to state 209


State 274

  160 initializer_list: designation_opt initializer .

    $default  reduce using rule 160 (initializer_list)


State 275

  164 designation: designator_list '=' .

    $default  reduce using rule 164 (designation)


State 276

  166 designator_list: designator_list designator .

    $default  reduce using rule 166 (designator_list)


State 277

  152 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 152 (parameter_declaration)


State 278

  137 direct_declarator: direct_declarator '(' ID_list_opt ')' .

    $default  reduce using rule 137 (direct_declarator)


State 279

  136 direct_declarator: direct_declarator '(' parameter_type_list ')' .

    $default  reduce using rule 136 (direct_declarator)


State 280

  149 parameter_type_list: parameter_list ',' . ELLIPSIS
  151 parameter_list: parameter_list ',' . parameter_declaration

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21
    ELLIPSIS   shift, and go to state 307

    declaration_specifiers   go to state 212
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    parameter_declaration    go to state 308


State 281

  155 ID_list: ID_list ',' . ID

    ID  shift, and go to state 309


State 282

  133 direct_declarator: direct_declarator '[' STATIC type_qualifier_list_opt . assignment_expression ']'

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 310


State 283

   28 unary_operator: '*' .
  135 direct_declarator: direct_declarator '[' type_qualifier_list_opt '*' . ']'

    ']'  shift, and go to state 311

    $default  reduce using rule 28 (unary_operator)


State 284

  140 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 140 (assignment_expression_opt)


State 285

  132 direct_declarator: direct_declarator '[' type_qualifier_list_opt assignment_expression_opt . ']'

    ']'  shift, and go to state 312


State 286

  134 direct_declarator: direct_declarator '[' type_qualifier_list STATIC . assignment_expression ']'

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 313


State 287

  176 labeled_statement: CASE constant_expression ':' statement .

    $default  reduce using rule 176 (labeled_statement)


State 288

  191 iteration_statement: DO M statement M . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 314


State 289

  193 iteration_statement: FOR '(' declaration expression_opt . ';' expression_opt ')' statement

    ';'  shift, and go to state 315


State 290

  192 iteration_statement: FOR '(' expression_opt ';' . M expression_opt N ';' M expression_opt N ')' M statement

    $default  reduce using rule 1 (M)

    M  go to state 316


State 291

  187 selection_statement: IF '(' expression N . ')' M statement N ELSE M statement N
  188                    | IF '(' expression N . ')' M statement N

    ')'  shift, and go to state 317


State 292

   17 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   18                   | '(' type_name ')' . '{' initializer_list ',' '}'
   26 unary_expression: SIZEOF '(' type_name ')' .

    '{'  shift, and go to state 296

    '{'       [reduce using rule 26 (unary_expression)]
    $default  reduce using rule 26 (unary_expression)


State 293

  189 selection_statement: SWITCH '(' expression ')' . statement

    BREAK           shift, and go to state 69
    CASE            shift, and go to state 70
    CONTINUE        shift, and go to state 71
    DEFAULT         shift, and go to state 72
    DO              shift, and go to state 73
    FOR             shift, and go to state 74
    GOTO_KEYWORD    shift, and go to state 75
    IF              shift, and go to state 76
    RETURN_KEYWORD  shift, and go to state 77
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 79
    WHILE           shift, and go to state 80
    INCREMENT       shift, and go to state 81
    DECREMENT       shift, and go to state 82
    ID              shift, and go to state 83
    CONST_INT       shift, and go to state 84
    CONST_FLT       shift, and go to state 85
    STRING          shift, and go to state 86
    CONST_CHAR      shift, and go to state 87
    '('             shift, and go to state 88
    '{'             shift, and go to state 53
    '&'             shift, and go to state 90
    '*'             shift, and go to state 91
    '+'             shift, and go to state 92
    '-'             shift, and go to state 93
    '~'             shift, and go to state 94
    '!'             shift, and go to state 95

    $default  reduce using rule 186 (expression_opt)

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 112
    expression                 go to state 113
    statement                  go to state 318
    labeled_statement          go to state 116
    compound_statement         go to state 117
    expression_statement       go to state 120
    expression_opt             go to state 121
    selection_statement        go to state 122
    iteration_statement        go to state 123
    jump_statement             go to state 124


State 294

   80 expression: expression . ',' assignment_expression
  190 iteration_statement: WHILE M '(' expression . N ')' M statement

    ','  shift, and go to state 199

    $default  reduce using rule 2 (N)

    N  go to state 319


State 295

   17 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   18                   | '(' type_name ')' . '{' initializer_list ',' '}'

    '{'  shift, and go to state 296


State 296

   17 postfix_expression: '(' type_name ')' '{' . initializer_list '}'
   18                   | '(' type_name ')' '{' . initializer_list ',' '}'

    '['  shift, and go to state 203
    '.'  shift, and go to state 204

    $default  reduce using rule 163 (designation_opt)

    initializer_list  go to state 320
    designation_opt   go to state 206
    designation       go to state 207
    designator_list   go to state 208
    designator        go to state 209


State 297

   34 cast_expression: '(' type_name ')' cast_expression .

    $default  reduce using rule 34 (cast_expression)


State 298

   12 postfix_expression: postfix_expression '(' argument_expression_list ')' .

    $default  reduce using rule 12 (postfix_expression)


State 299

   20 argument_expression_list: argument_expression_list ',' . assignment_expression

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 321


State 300

   10 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 10 (postfix_expression)


State 301

   60 logical_AND_expression: logical_AND_expression N AND_OP M . inclusive_OR_expression N

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 138
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 322


State 302

   62 logical_OR_expression: logical_OR_expression N OR_OP M . logical_AND_expression N

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 138
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 323


State 303

   64 conditional_expression: logical_OR_expression N '?' M . expression N ':' M conditional_expression

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 112
    expression                 go to state 324


State 304

  167 designator: '[' constant_expression ']' .

    $default  reduce using rule 167 (designator)


State 305

  159 initializer: '{' initializer_list ',' '}' .

    $default  reduce using rule 159 (initializer)


State 306

  161 initializer_list: initializer_list ',' designation_opt . initializer

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '{'         shift, and go to state 126
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 127
    initializer                go to state 325


State 307

  149 parameter_type_list: parameter_list ',' ELLIPSIS .

    $default  reduce using rule 149 (parameter_type_list)


State 308

  151 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 151 (parameter_list)


State 309

  155 ID_list: ID_list ',' ID .

    $default  reduce using rule 155 (ID_list)


State 310

  133 direct_declarator: direct_declarator '[' STATIC type_qualifier_list_opt assignment_expression . ']'

    ']'  shift, and go to state 326


State 311

  135 direct_declarator: direct_declarator '[' type_qualifier_list_opt '*' ']' .

    $default  reduce using rule 135 (direct_declarator)


State 312

  132 direct_declarator: direct_declarator '[' type_qualifier_list_opt assignment_expression_opt ']' .

    $default  reduce using rule 132 (direct_declarator)


State 313

  134 direct_declarator: direct_declarator '[' type_qualifier_list STATIC assignment_expression . ']'

    ']'  shift, and go to state 327


State 314

  191 iteration_statement: DO M statement M WHILE . '(' expression ')' ';'

    '('  shift, and go to state 328


State 315

  193 iteration_statement: FOR '(' declaration expression_opt ';' . expression_opt ')' statement

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    $default  reduce using rule 186 (expression_opt)

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 112
    expression                 go to state 113
    expression_opt             go to state 329


State 316

  192 iteration_statement: FOR '(' expression_opt ';' M . expression_opt N ';' M expression_opt N ')' M statement

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    $default  reduce using rule 186 (expression_opt)

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 112
    expression                 go to state 113
    expression_opt             go to state 330


State 317

  187 selection_statement: IF '(' expression N ')' . M statement N ELSE M statement N
  188                    | IF '(' expression N ')' . M statement N

    $default  reduce using rule 1 (M)

    M  go to state 331


State 318

  189 selection_statement: SWITCH '(' expression ')' statement .

    $default  reduce using rule 189 (selection_statement)


State 319

  190 iteration_statement: WHILE M '(' expression N . ')' M statement

    ')'  shift, and go to state 332


State 320

   17 postfix_expression: '(' type_name ')' '{' initializer_list . '}'
   18                   | '(' type_name ')' '{' initializer_list . ',' '}'
  161 initializer_list: initializer_list . ',' designation_opt initializer

    '}'  shift, and go to state 333
    ','  shift, and go to state 334


State 321

   20 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 20 (argument_expression_list)


State 322

   58 inclusive_OR_expression: inclusive_OR_expression . '|' exclusive_OR_expression
   60 logical_AND_expression: logical_AND_expression N AND_OP M inclusive_OR_expression . N

    '|'  shift, and go to state 196

    $default  reduce using rule 2 (N)

    N  go to state 335


State 323

   60 logical_AND_expression: logical_AND_expression . N AND_OP M inclusive_OR_expression N
   62 logical_OR_expression: logical_OR_expression N OR_OP M logical_AND_expression . N

    $default  reduce using rule 2 (N)

    N  go to state 336


State 324

   64 conditional_expression: logical_OR_expression N '?' M expression . N ':' M conditional_expression
   80 expression: expression . ',' assignment_expression

    ','  shift, and go to state 199

    $default  reduce using rule 2 (N)

    N  go to state 337


State 325

  161 initializer_list: initializer_list ',' designation_opt initializer .

    $default  reduce using rule 161 (initializer_list)


State 326

  133 direct_declarator: direct_declarator '[' STATIC type_qualifier_list_opt assignment_expression ']' .

    $default  reduce using rule 133 (direct_declarator)


State 327

  134 direct_declarator: direct_declarator '[' type_qualifier_list STATIC assignment_expression ']' .

    $default  reduce using rule 134 (direct_declarator)


State 328

  191 iteration_statement: DO M statement M WHILE '(' . expression ')' ';'

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 112
    expression                 go to state 338


State 329

  193 iteration_statement: FOR '(' declaration expression_opt ';' expression_opt . ')' statement

    ')'  shift, and go to state 339


State 330

  192 iteration_statement: FOR '(' expression_opt ';' M expression_opt . N ';' M expression_opt N ')' M statement

    $default  reduce using rule 2 (N)

    N  go to state 340


State 331

  187 selection_statement: IF '(' expression N ')' M . statement N ELSE M statement N
  188                    | IF '(' expression N ')' M . statement N

    BREAK           shift, and go to state 69
    CASE            shift, and go to state 70
    CONTINUE        shift, and go to state 71
    DEFAULT         shift, and go to state 72
    DO              shift, and go to state 73
    FOR             shift, and go to state 74
    GOTO_KEYWORD    shift, and go to state 75
    IF              shift, and go to state 76
    RETURN_KEYWORD  shift, and go to state 77
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 79
    WHILE           shift, and go to state 80
    INCREMENT       shift, and go to state 81
    DECREMENT       shift, and go to state 82
    ID              shift, and go to state 83
    CONST_INT       shift, and go to state 84
    CONST_FLT       shift, and go to state 85
    STRING          shift, and go to state 86
    CONST_CHAR      shift, and go to state 87
    '('             shift, and go to state 88
    '{'             shift, and go to state 53
    '&'             shift, and go to state 90
    '*'             shift, and go to state 91
    '+'             shift, and go to state 92
    '-'             shift, and go to state 93
    '~'             shift, and go to state 94
    '!'             shift, and go to state 95

    $default  reduce using rule 186 (expression_opt)

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 112
    expression                 go to state 113
    statement                  go to state 341
    labeled_statement          go to state 116
    compound_statement         go to state 117
    expression_statement       go to state 120
    expression_opt             go to state 121
    selection_statement        go to state 122
    iteration_statement        go to state 123
    jump_statement             go to state 124


State 332

  190 iteration_statement: WHILE M '(' expression N ')' . M statement

    $default  reduce using rule 1 (M)

    M  go to state 342


State 333

   17 postfix_expression: '(' type_name ')' '{' initializer_list '}' .

    $default  reduce using rule 17 (postfix_expression)


State 334

   18 postfix_expression: '(' type_name ')' '{' initializer_list ',' . '}'
  161 initializer_list: initializer_list ',' . designation_opt initializer

    '['  shift, and go to state 203
    '.'  shift, and go to state 204
    '}'  shift, and go to state 343

    $default  reduce using rule 163 (designation_opt)

    designation_opt  go to state 306
    designation      go to state 207
    designator_list  go to state 208
    designator       go to state 209


State 335

   60 logical_AND_expression: logical_AND_expression N AND_OP M inclusive_OR_expression N .

    $default  reduce using rule 60 (logical_AND_expression)


State 336

   60 logical_AND_expression: logical_AND_expression N . AND_OP M inclusive_OR_expression N
   62 logical_OR_expression: logical_OR_expression N OR_OP M logical_AND_expression N .

    AND_OP  shift, and go to state 265

    $default  reduce using rule 62 (logical_OR_expression)


State 337

   64 conditional_expression: logical_OR_expression N '?' M expression N . ':' M conditional_expression

    ':'  shift, and go to state 344


State 338

   80 expression: expression . ',' assignment_expression
  191 iteration_statement: DO M statement M WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 345
    ','  shift, and go to state 199


State 339

  193 iteration_statement: FOR '(' declaration expression_opt ';' expression_opt ')' . statement

    BREAK           shift, and go to state 69
    CASE            shift, and go to state 70
    CONTINUE        shift, and go to state 71
    DEFAULT         shift, and go to state 72
    DO              shift, and go to state 73
    FOR             shift, and go to state 74
    GOTO_KEYWORD    shift, and go to state 75
    IF              shift, and go to state 76
    RETURN_KEYWORD  shift, and go to state 77
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 79
    WHILE           shift, and go to state 80
    INCREMENT       shift, and go to state 81
    DECREMENT       shift, and go to state 82
    ID              shift, and go to state 83
    CONST_INT       shift, and go to state 84
    CONST_FLT       shift, and go to state 85
    STRING          shift, and go to state 86
    CONST_CHAR      shift, and go to state 87
    '('             shift, and go to state 88
    '{'             shift, and go to state 53
    '&'             shift, and go to state 90
    '*'             shift, and go to state 91
    '+'             shift, and go to state 92
    '-'             shift, and go to state 93
    '~'             shift, and go to state 94
    '!'             shift, and go to state 95

    $default  reduce using rule 186 (expression_opt)

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 112
    expression                 go to state 113
    statement                  go to state 346
    labeled_statement          go to state 116
    compound_statement         go to state 117
    expression_statement       go to state 120
    expression_opt             go to state 121
    selection_statement        go to state 122
    iteration_statement        go to state 123
    jump_statement             go to state 124


State 340

  192 iteration_statement: FOR '(' expression_opt ';' M expression_opt N . ';' M expression_opt N ')' M statement

    ';'  shift, and go to state 347


State 341

  187 selection_statement: IF '(' expression N ')' M statement . N ELSE M statement N
  188                    | IF '(' expression N ')' M statement . N

    $default  reduce using rule 2 (N)

    N  go to state 348


State 342

  190 iteration_statement: WHILE M '(' expression N ')' M . statement

    BREAK           shift, and go to state 69
    CASE            shift, and go to state 70
    CONTINUE        shift, and go to state 71
    DEFAULT         shift, and go to state 72
    DO              shift, and go to state 73
    FOR             shift, and go to state 74
    GOTO_KEYWORD    shift, and go to state 75
    IF              shift, and go to state 76
    RETURN_KEYWORD  shift, and go to state 77
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 79
    WHILE           shift, and go to state 80
    INCREMENT       shift, and go to state 81
    DECREMENT       shift, and go to state 82
    ID              shift, and go to state 83
    CONST_INT       shift, and go to state 84
    CONST_FLT       shift, and go to state 85
    STRING          shift, and go to state 86
    CONST_CHAR      shift, and go to state 87
    '('             shift, and go to state 88
    '{'             shift, and go to state 53
    '&'             shift, and go to state 90
    '*'             shift, and go to state 91
    '+'             shift, and go to state 92
    '-'             shift, and go to state 93
    '~'             shift, and go to state 94
    '!'             shift, and go to state 95

    $default  reduce using rule 186 (expression_opt)

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 112
    expression                 go to state 113
    statement                  go to state 349
    labeled_statement          go to state 116
    compound_statement         go to state 117
    expression_statement       go to state 120
    expression_opt             go to state 121
    selection_statement        go to state 122
    iteration_statement        go to state 123
    jump_statement             go to state 124


State 343

   18 postfix_expression: '(' type_name ')' '{' initializer_list ',' '}' .

    $default  reduce using rule 18 (postfix_expression)


State 344

   64 conditional_expression: logical_OR_expression N '?' M expression N ':' . M conditional_expression

    $default  reduce using rule 1 (M)

    M  go to state 350


State 345

  191 iteration_statement: DO M statement M WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 351


State 346

  193 iteration_statement: FOR '(' declaration expression_opt ';' expression_opt ')' statement .

    $default  reduce using rule 193 (iteration_statement)


State 347

  192 iteration_statement: FOR '(' expression_opt ';' M expression_opt N ';' . M expression_opt N ')' M statement

    $default  reduce using rule 1 (M)

    M  go to state 352


State 348

  187 selection_statement: IF '(' expression N ')' M statement N . ELSE M statement N
  188                    | IF '(' expression N ')' M statement N .

    ELSE  shift, and go to state 353

    ELSE      [reduce using rule 188 (selection_statement)]
    $default  reduce using rule 188 (selection_statement)


State 349

  190 iteration_statement: WHILE M '(' expression N ')' M statement .

    $default  reduce using rule 190 (iteration_statement)


State 350

   64 conditional_expression: logical_OR_expression N '?' M expression N ':' M . conditional_expression

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 138
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 354


State 351

  191 iteration_statement: DO M statement M WHILE '(' expression ')' ';' .

    $default  reduce using rule 191 (iteration_statement)


State 352

  192 iteration_statement: FOR '(' expression_opt ';' M expression_opt N ';' M . expression_opt N ')' M statement

    SIZEOF      shift, and go to state 78
    INCREMENT   shift, and go to state 81
    DECREMENT   shift, and go to state 82
    ID          shift, and go to state 125
    CONST_INT   shift, and go to state 84
    CONST_FLT   shift, and go to state 85
    STRING      shift, and go to state 86
    CONST_CHAR  shift, and go to state 87
    '('         shift, and go to state 88
    '&'         shift, and go to state 90
    '*'         shift, and go to state 91
    '+'         shift, and go to state 92
    '-'         shift, and go to state 93
    '~'         shift, and go to state 94
    '!'         shift, and go to state 95

    $default  reduce using rule 186 (expression_opt)

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 112
    expression                 go to state 113
    expression_opt             go to state 355


State 353

  187 selection_statement: IF '(' expression N ')' M statement N ELSE . M statement N

    $default  reduce using rule 1 (M)

    M  go to state 356


State 354

   64 conditional_expression: logical_OR_expression N '?' M expression N ':' M conditional_expression .

    $default  reduce using rule 64 (conditional_expression)


State 355

  192 iteration_statement: FOR '(' expression_opt ';' M expression_opt N ';' M expression_opt . N ')' M statement

    $default  reduce using rule 2 (N)

    N  go to state 357


State 356

  187 selection_statement: IF '(' expression N ')' M statement N ELSE M . statement N

    BREAK           shift, and go to state 69
    CASE            shift, and go to state 70
    CONTINUE        shift, and go to state 71
    DEFAULT         shift, and go to state 72
    DO              shift, and go to state 73
    FOR             shift, and go to state 74
    GOTO_KEYWORD    shift, and go to state 75
    IF              shift, and go to state 76
    RETURN_KEYWORD  shift, and go to state 77
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 79
    WHILE           shift, and go to state 80
    INCREMENT       shift, and go to state 81
    DECREMENT       shift, and go to state 82
    ID              shift, and go to state 83
    CONST_INT       shift, and go to state 84
    CONST_FLT       shift, and go to state 85
    STRING          shift, and go to state 86
    CONST_CHAR      shift, and go to state 87
    '('             shift, and go to state 88
    '{'             shift, and go to state 53
    '&'             shift, and go to state 90
    '*'             shift, and go to state 91
    '+'             shift, and go to state 92
    '-'             shift, and go to state 93
    '~'             shift, and go to state 94
    '!'             shift, and go to state 95

    $default  reduce using rule 186 (expression_opt)

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 112
    expression                 go to state 113
    statement                  go to state 358
    labeled_statement          go to state 116
    compound_statement         go to state 117
    expression_statement       go to state 120
    expression_opt             go to state 121
    selection_statement        go to state 122
    iteration_statement        go to state 123
    jump_statement             go to state 124


State 357

  192 iteration_statement: FOR '(' expression_opt ';' M expression_opt N ';' M expression_opt N . ')' M statement

    ')'  shift, and go to state 359


State 358

  187 selection_statement: IF '(' expression N ')' M statement N ELSE M statement . N

    $default  reduce using rule 2 (N)

    N  go to state 360


State 359

  192 iteration_statement: FOR '(' expression_opt ';' M expression_opt N ';' M expression_opt N ')' . M statement

    $default  reduce using rule 1 (M)

    M  go to state 361


State 360

  187 selection_statement: IF '(' expression N ')' M statement N ELSE M statement N .

    $default  reduce using rule 187 (selection_statement)


State 361

  192 iteration_statement: FOR '(' expression_opt ';' M expression_opt N ';' M expression_opt N ')' M . statement

    BREAK           shift, and go to state 69
    CASE            shift, and go to state 70
    CONTINUE        shift, and go to state 71
    DEFAULT         shift, and go to state 72
    DO              shift, and go to state 73
    FOR             shift, and go to state 74
    GOTO_KEYWORD    shift, and go to state 75
    IF              shift, and go to state 76
    RETURN_KEYWORD  shift, and go to state 77
    SIZEOF          shift, and go to state 78
    SWITCH          shift, and go to state 79
    WHILE           shift, and go to state 80
    INCREMENT       shift, and go to state 81
    DECREMENT       shift, and go to state 82
    ID              shift, and go to state 83
    CONST_INT       shift, and go to state 84
    CONST_FLT       shift, and go to state 85
    STRING          shift, and go to state 86
    CONST_CHAR      shift, and go to state 87
    '('             shift, and go to state 88
    '{'             shift, and go to state 53
    '&'             shift, and go to state 90
    '*'             shift, and go to state 91
    '+'             shift, and go to state 92
    '-'             shift, and go to state 93
    '~'             shift, and go to state 94
    '!'             shift, and go to state 95

    $default  reduce using rule 186 (expression_opt)

    primary_expression         go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    unary_operator             go to state 99
    cast_expression            go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    AND_expression             go to state 106
    exclusive_OR_expression    go to state 107
    inclusive_OR_expression    go to state 108
    logical_AND_expression     go to state 109
    logical_OR_expression      go to state 110
    conditional_expression     go to state 111
    assignment_expression      go to state 112
    expression                 go to state 113
    statement                  go to state 362
    labeled_statement          go to state 116
    compound_statement         go to state 117
    expression_statement       go to state 120
    expression_opt             go to state 121
    selection_statement        go to state 122
    iteration_statement        go to state 123
    jump_statement             go to state 124


State 362

  192 iteration_statement: FOR '(' expression_opt ';' M expression_opt N ';' M expression_opt N ')' M statement .

    $default  reduce using rule 192 (iteration_statement)
